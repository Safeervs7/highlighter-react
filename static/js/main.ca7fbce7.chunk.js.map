{"version":3,"sources":["style/main-theme.js","context/ThemeProvider.js","components/Banner.js","containers/Header.js","containers/ErrorPage.js","service/fetchData.js","context/DataProvider.js","components/DataTableHead.js","hoc/CheckHightlight.js","components/DataTableBody.js","components/DataTableEmptyBody.js","containers/DataTable.js","App.js","serviceWorker.js","index.js"],"names":["mainTheme","customBg","backgroundColor","color","customMarginTop","marginTop","customPaddingTop","paddingTop","bgRed","bgGreen","tableMinHeight","minHeight","ThemeContext","createContext","withStyles","props","Provider","value","classes","children","Banner","themeContext","useContext","Toolbar","AppBar","className","Typography","variant","Header","ErrorPage","fetchData","a","async","axios","get","then","data","catch","err","highlightArray","inclusion","exclusion","formattedAnnotations","forEach","annotation","annotations","encounters","push","highlight","DataContext","DataProvider","useState","dataFile","setDataFile","highlightFile","setHighlightFile","isDataFetched","setIsDataFetched","isDataFullyFetched","setIsDataFullyFetched","useEffect","DataTableHead","TableHead","TableRow","head","map","name","i","TableCell","align","key","CheckHightlight","Component","properties","dataContext","classValue","includes","DataTableBody","TableBody","row","date","code","code_system","code_system_name","DataTableEmptyBody","colSpan","cellCount","DataTable","tableData","deIdentifiedFile","file","parser","tableHeadArray","TableContainer","component","Paper","Table","aria-label","length","Grid","container","justify","CircularProgress","disableShrink","App","Container","fixed","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca7fbce7.chunk.js","sourcesContent":["\nconst mainTheme = {\n    customBg:{\n        backgroundColor:'#dfe09b',\n        color: '#000000'\n    },\n    customMarginTop: {\n        marginTop: '20px'\n    },\n    customPaddingTop: {\n        paddingTop: '20px'\n    },\n    bgRed:{\n        backgroundColor:'#ec8888',\n    },\n    bgGreen:{\n        backgroundColor:'#5bad3e',\n    },\n    tableMinHeight: {\n        minHeight: '20px'\n    }\n}\n\nexport default (mainTheme);","import React, { createContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport mainTheme from '../style/main-theme';\n\nexport const ThemeContext = createContext();\n\nconst ThemeProvider =(props)=> {\n    return (\n      <ThemeContext.Provider value={{classes:props.classes}}>\n        {props.children}\n      </ThemeContext.Provider>\n    )\n  }\n  \nexport default withStyles(mainTheme)(ThemeProvider);","import React, { useContext } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { ThemeContext } from '../context/ThemeProvider';\n\nconst Banner =(props)=> {\n  const themeContext = useContext(ThemeContext);\n  return  (\n    <Toolbar>\n      <AppBar className={themeContext.classes.customBg}>\n        <Toolbar>\n          <Typography variant=\"h6\">Highlighter</Typography>\n        </Toolbar>\n      </AppBar>\n    </Toolbar>\n  )\n}\n\nexport default (Banner);","import React from 'react';\nimport Banner from '../components/Banner';\n\nconst Header =()=> {\n  return  <Banner></Banner>\n}\n\nexport default Header;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst ErrorPage =()=> {\n  return  (\n    <Typography variant=\"h6\">Page Not Found</Typography>\n  )\n}\n\nexport default ErrorPage;","import axios from 'axios';\nconst fetchData = async ()=>{\n    // await new Promise(resolve => setTimeout(resolve, 10000));\n    let data =  await axios\n        .get('./data/data_file.json')\n        .then(({ data })=> {\n            return data;\n        })\n        .catch((err)=> {});\n    let highlight =  await axios\n        .get('./data/highlight.json')\n        .then(({ data })=> {\n            let highlightArray = {\n                inclusion: [],\n                exclusion: [],\n            };\n\n            //re structure highlighter json\n            if(data && data.formattedAnnotations){\n                data.formattedAnnotations.forEach((annotation)=>{\n                    if(annotation && annotation.annotations && annotation.annotations.annotations && annotation.annotations.annotations.encounters){\n                        if(annotation.annotations.annotations.encounters.inclusion){\n                            annotation.annotations.annotations.encounters.inclusion.forEach((inclusion)=>{\n                                highlightArray.inclusion.push(inclusion);\n                            });\n                        }\n                        if(annotation.annotations.annotations.encounters.exclusion){\n                            annotation.annotations.annotations.encounters.exclusion.forEach((exclusion)=>{\n                                highlightArray.exclusion.push(exclusion);\n                            });\n                        }\n                    }\n                });\n            }\n            return highlightArray;\n        })\n        .catch((err)=> {});\n    return {\n        data : data,\n        highlight : highlight,\n    }\n}\n  \nexport default fetchData;","import React, { createContext, useState, useEffect } from 'react';\n\nimport fetchData from '../service/fetchData';\n\nexport const DataContext = createContext();\n\nconst DataProvider =(props)=> {\n    let [ dataFile, setDataFile ] = useState({});\n    let [ highlightFile, setHighlightFile ] = useState({});\n    let [ isDataFetched, setIsDataFetched ] = useState(false);\n    let [ isDataFullyFetched, setIsDataFullyFetched ] = useState(false);\n\n    let getFetchData = ()=>{fetchData().then((data)=>{\n        if(data.data){\n          setDataFile(data.data);\n        }\n        if(data.highlight){\n          setHighlightFile(data.highlight);\n        }\n        setIsDataFullyFetched(true);\n      });\n    }\n\n    useEffect(() => {\n        if(!isDataFetched){\n            getFetchData();\n            setIsDataFetched(true);\n        }\n    }, [isDataFetched]);\n    return (\n      <DataContext.Provider value={{dataFile:dataFile, highlightFile: highlightFile, isDataFetched: isDataFullyFetched }}>\n        {props.children}\n      </DataContext.Provider>\n    )\n  }\n  \nexport default DataProvider;","import React, { useContext } from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport {ThemeContext} from '../context/ThemeProvider';\n\nconst DataTableHead = (props) =>{\n    const themeContext = useContext(ThemeContext);\n    return (\n            <TableHead>\n               <TableRow>\n                  {props.value.head.map((name, i) => {     \n                    return (<TableCell className={themeContext.classes.customBg} align=\"center\" key={i} >{name}</TableCell>) \n                  })}\n                </TableRow>\n            </TableHead>\n    );\n}\n\nexport default DataTableHead;","import React, { useContext } from 'react';\n\n\nimport { ThemeContext } from '../context/ThemeProvider';\nimport { DataContext } from '../context/DataProvider';\n\nconst CheckHightlight = ( Component, properties, value ) => {\n    const themeContext = useContext(ThemeContext);\n    const dataContext = useContext(DataContext);\n    let classValue = '';\n    if(dataContext.highlightFile.inclusion && dataContext.highlightFile.inclusion.includes(value)){\n        classValue = themeContext.classes.bgRed;\n    }\n    if(dataContext.highlightFile.exclusion && dataContext.highlightFile.exclusion.includes(value)){\n        classValue = themeContext.classes.bgGreen;\n    }\n    return <Component {...properties} className={classValue}>{value}</Component>;\n};\n\nexport default CheckHightlight;","import React from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport CheckHightlight from '../hoc/CheckHightlight';\n\nconst DataTableBody = (props) =>{\n\n    return (\n            <TableBody>\n            {\n                props.value.data.map((row, i) => (\n                  <TableRow key={i}>\n                    <TableCell align=\"left\">{row.date}</TableCell>\n                    <TableCell align=\"left\">{row.name}</TableCell>\n                    <TableCell align=\"left\">{row.code}</TableCell>\n                    {CheckHightlight(TableCell, {align:\"left\"}, row.code_system)}\n                    {CheckHightlight(TableCell, {align:\"left\"}, row.code_system_name)}\n                  </TableRow>\n                ))\n            }\n          </TableBody>\n    );\n}\n\nexport default DataTableBody;","import React from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst DataTableEmptyBody = (props) =>{\n\n    return (\n            <TableBody>\n            {\n                  <TableRow>\n                    <TableCell colSpan={props.cellCount} align=\"left\">No Items</TableCell>\n                  </TableRow>\n            }\n          </TableBody>\n    );\n}\n\nexport default DataTableEmptyBody;","import React, { useContext } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport { DataContext } from '../context/DataProvider';\nimport { ThemeContext } from '../context/ThemeProvider';\n\nimport DataTableHead from '../components/DataTableHead';\nimport DataTableBody from '../components/DataTableBody';\nimport DataTableEmptyBody from '../components/DataTableEmptyBody';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst DataTable = () =>{\n    const dataContext = useContext(DataContext);\n    const themeContext = useContext(ThemeContext);\n\n    let tableData = [];\n    if(dataContext.dataFile && dataContext.dataFile.deIdentifiedFile && dataContext.dataFile.deIdentifiedFile.file && dataContext.dataFile.deIdentifiedFile.file.encounters){\n      tableData = dataContext.dataFile.deIdentifiedFile.file.encounters.parser;\n    }\n    let tableHeadArray = ['Date', 'Name', 'Code', 'Code System', 'Code System Name'];\n\n    return (\n        dataContext.isDataFetched ? (\n          <TableContainer component={Paper} className={`${themeContext.classes.customMarginTop} ${themeContext.classes.tableMinHeight}`}>\n          <Table aria-label=\"simple table\">\n            <DataTableHead value={{head:tableHeadArray}}></DataTableHead>\n            {tableData.length > 0 ? (\n              <DataTableBody value={{data:tableData}}></DataTableBody>\n            ) : (\n               <DataTableEmptyBody cellCount={tableHeadArray.length}></DataTableEmptyBody>\n            )}\n          </Table>\n        </TableContainer>\n        ):(\n          <Grid container justify = \"center\" className={`${themeContext.classes.customMarginTop}`} >\n            <CircularProgress disableShrink />\n          </Grid>\n        )\n    );\n}\n\nexport default DataTable;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\n\nimport Header from './containers/Header';\nimport ErrorPage from './containers/ErrorPage';\nimport ThemeProvider from './context/ThemeProvider';\nimport DataProvider from './context/DataProvider';\nimport DataTable from './containers/DataTable';\n\nimport './App.css';\n\nfunction App() {\n  return (\n          <Container fixed>\n            <ThemeProvider>\n              <DataProvider>\n                <Header></Header>\n                <Router>\n                  <Switch>\n                          <Route component={DataTable} exact path='/' />\n                          <Route component={DataTable} exact path='/highlighter-react/' /> {/* For Github */}\n                          <Route path=\"*\" component={ErrorPage}/>\n                  </Switch>\n                </Router>\n              </DataProvider>\n            </ThemeProvider>\n          </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}